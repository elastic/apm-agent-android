[versions]
opentelemetry = "1.46.0"
opentelemetry-semconv = "1.29.0-alpha"
opentelemetry-contrib = "1.43.0-alpha"
byteBuddy = "1.16.1"
kotlin = "2.1.0"
android = "8.7.3"
junit5 = "5.11.4"
autoService = "1.1.1"

[libraries]
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry" }
stagemonitor-configuration = "org.stagemonitor:stagemonitor-configuration:0.89.1"
androidx-annotations = "androidx.annotation:annotation:1.9.1"
androidx-core = "androidx.core:core:1.15.0"
dsl-json = "com.dslplatform:dsl-json-java8:1.10.0"
slf4j-api = "org.slf4j:slf4j-api:2.0.7"
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
opentelemetry-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }
opentelemetry-semconv-incubating = { module = "io.opentelemetry.semconv:opentelemetry-semconv-incubating", version.ref = "opentelemetry-semconv" }
opentelemetry-diskBuffering = { module = "io.opentelemetry.contrib:opentelemetry-disk-buffering", version.ref = "opentelemetry-contrib" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry" }

#Test tools
junit4 = "junit:junit:4.13.2"
junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
junit5-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
opentelemetry-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "opentelemetry" }
robolectric = "org.robolectric:robolectric:4.14.1"
assertj = "org.assertj:assertj-core:3.27.3"
coreLib = "com.android.tools:desugar_jdk_libs:2.1.4"
mockk = "io.mockk:mockk:1.13.16"
awaitility = "org.awaitility:awaitility-kotlin:4.2.2"
wireMock = "org.wiremock:wiremock:3.10.0"

#Compilation tools
apache-commons-text = "org.apache.commons:commons-text:1.10.0"
commons-io = "commons-io:commons-io:2.13.0"
spotless-plugin = "com.diffplug.spotless:spotless-plugin-gradle:7.0.2"
dokka = "org.jetbrains.dokka:dokka-gradle-plugin:1.9.0"
nexus-publish-plugin = "io.github.gradle-nexus:publish-plugin:2.0.0"
gradle-publish-plugin = "com.gradle.publish:plugin-publish-plugin:1.2.1"
gradle-shadow-plugin = "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
byteBuddy-plugin = { module = "net.bytebuddy:byte-buddy-gradle-plugin", version.ref = "byteBuddy" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
autoService-compiler = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
buildconfig-plugin = "com.github.gmazzo.buildconfig:com.github.gmazzo.buildconfig.gradle.plugin:5.5.1"
animalsniffer-plugin = "ru.vyarus:gradle-animalsniffer-plugin:2.0.0"

[bundles]
mocking = ["mockk"]
junit = ["junit4", "junit5"]
opentelemetry-semconv = ["opentelemetry-semconv", "opentelemetry-semconv-incubating"]

[plugins]
androidApp = { id = "com.android.application", version.ref = "android" }
androidLib = { id = "com.android.library", version.ref = "android" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
