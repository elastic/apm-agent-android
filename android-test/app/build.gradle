plugins {
    alias(rootLibs.plugins.androidApp)
    alias(rootLibs.plugins.kotlin.android)
    id 'co.elastic.apm.android'
}

android {
    namespace = "co.elastic.apm.android.test"
    compileSdk androidCompileSdk
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                systemProperty "agentVersion", agentVersion
            }
        }
        animationsDisabled = true
    }
    defaultConfig {
        applicationId "co.elastic.apm.android.test"
        minSdk androidMinSdk
        targetSdk androidCompileSdk
        versionCode 5
        versionName "1.0"

        testInstrumentationRunner "co.elastic.apm.android.test.base.TestRunner"
    }
    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility jvmCompatibility
        targetCompatibility jvmCompatibility
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = jvmCompatibility.toString()
    }
}

elasticApm {
    serviceName = "my-app"
    serverUrl = "http://localhost"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation libs.espresso.idlingResource
    implementation project(':android-test-common')
    implementation "androidx.fragment:fragment-testing:1.6.1"
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")
    testImplementation "io.opentelemetry:opentelemetry-exporter-otlp:1.28.0"
    testImplementation 'org.robolectric:robolectric:4.12.1'
    testImplementation libs.mockito
    testImplementation libs.mockWebServer
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.espresso.contrib
    androidTestImplementation libs.mockWebServer
}