name: ci

on:
  pull_request:
    paths-ignore:
      - "**/*.asciidoc"
      - "**/*.md"
      - "**/*.png"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.asciidoc"
      - "**/*.md"
      - "**/*.png"

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint
        run: ./gradlew lint
      - name: Verify OSS compliance
        run: ./gradlew verifyNoticeFile

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: ./gradlew assemble
      - name: Test
        run: ./tests.sh
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/build/test-results/testRelease*/TEST-*.xml
            **/build/test-results/test/TEST-*.xml

  # The very last job to report whether the Workflow passed.
  # This will act as the Branch Protection gatekeeper
  ci:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.isSuccess }}

  test-release:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - id: buildkite
        name: Run Release dry-run
        uses: elastic/apm-pipeline-library/.github/actions/buildkite@current
        with:
          vaultUrl: ${{ secrets.VAULT_ADDR }}
          vaultRoleId: ${{ secrets.VAULT_ROLE_ID }}
          vaultSecretId: ${{ secrets.VAULT_SECRET_ID }}
          pipeline: apm-agent-android-release
          waitFor: true
          printBuildLogs: false
          buildEnvVars: |
            branch_specifier=main
            target_specifier=all
            dry_run=true
