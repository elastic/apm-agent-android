[versions]
opentelemetry-android = "0.5.0-alpha"
opentelemetry = "1.40.0"
opentelemetry-alpha = "1.40.0-alpha"
opentelemetry-semconv = "1.26.0-alpha"
opentelemetry-contrib = "1.37.0-alpha"
mockito = "5.14.2"
byteBuddy = "1.14.18"
okhttp = "4.12.0"
kotlin = "1.9.23"
google-autoService = "1.1.1"
android = "8.2.0"
junit5 = "5.11.3"

[libraries]
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry" }
opentelemetry-api-incubator = { module = "io.opentelemetry:opentelemetry-api-incubator", version.ref = "opentelemetry-alpha" }
opentelemetry-android = { module = "io.opentelemetry.android:android-agent", version.ref = "opentelemetry-android" }
opentelemetry-android-instrumentation-api = { module = "io.opentelemetry.android:instrumentation-common-api", version.ref = "opentelemetry-android" }
opentelemetry-android-instrumentation-lifecycle = { module = "io.opentelemetry.android:instrumentation-lifecycle", version.ref = "opentelemetry-android" }
opentelemetry-android-okhttpLib = { module = "io.opentelemetry.android:okhttp-3.0-library", version.ref = "opentelemetry-android" }
opentelemetry-android-okhttpAgent = { module = "io.opentelemetry.android:okhttp-3.0-agent", version.ref = "opentelemetry-android" }
stagemonitor-configuration = "org.stagemonitor:stagemonitor-configuration:0.89.1"
androidx-lifecycle = "androidx.lifecycle:lifecycle-process:2.5.1"
androidx-annotations = "androidx.annotation:annotation:1.4.0"
weaklockfree = "com.blogspot.mydailyjava:weak-lock-free:0.18"
dsl-json = "com.dslplatform:dsl-json-java8:1.10.0"
truetime = "com.github.instacart.truetime-android:library:3.5"
slf4j-api = "org.slf4j:slf4j-api:2.0.0"
androidx-fragment = "androidx.fragment:fragment:1.5.3"
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
opentelemetry-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }
opentelemetry-kotlin = { module = "io.opentelemetry:opentelemetry-extension-kotlin", version.ref = "opentelemetry" }
opentelemetry-diskBuffering = { module = "io.opentelemetry.contrib:opentelemetry-disk-buffering", version.ref = "opentelemetry-contrib" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry" }
kotlin-coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

#Test tools
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
junit4 = "junit:junit:4.13.2"
junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
junit5-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
mockwebserver = "com.squareup.okhttp3:mockwebserver:4.12.0"
opentelemetry-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "opentelemetry" }
robolectric = "org.robolectric:robolectric:4.13"
assertj = "org.assertj:assertj-core:3.26.3"
coreLib = "com.android.tools:desugar_jdk_libs:2.0.4"
mockk = "io.mockk:mockk:1.13.13"

#Compilation tools
apache-commons-text = "org.apache.commons:commons-text:1.10.0"
commons-io = "commons-io:commons-io:2.13.0"
spotless-plugin = "com.diffplug.spotless:spotless-plugin-gradle:6.24.0"
dokka = "org.jetbrains.dokka:dokka-gradle-plugin:1.9.0"
nexus-publish-plugin = "io.github.gradle-nexus:publish-plugin:1.3.0"
gradle-publish-plugin = "com.gradle.publish:plugin-publish-plugin:1.2.1"
gradle-shadow-plugin = "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
squareup-javaPoet = "com.squareup:javapoet:1.13.0"
google-autoService = { module = "com.google.auto.service:auto-service", version.ref = "google-autoService" }
google-autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "google-autoService" }
byteBuddy-plugin = { module = "net.bytebuddy:byte-buddy-gradle-plugin", version.ref = "byteBuddy" }

[bundles]
mocking = ["mockito", "mockk"]
junit = ["junit4", "junit5"]

[plugins]
androidApp = { id = "com.android.application", version.ref = "android" }
androidLib = { id = "com.android.library", version.ref = "android" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }